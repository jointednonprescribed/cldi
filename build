#!/usr/bin/env python3

import os, sys, subprocess


def find_in_list(find, elements): # {
	for i, v in enumerate(elements):
		if v == find:
			return i
	# else, return -1
	return -1
# }

def break_string(string): # {
	strings = []
	last_word = 0
	i = 0
	l = len(string)
	breakready = False
	while True: # {
		substr = string[last_word:]
		# Word loop
		for c in substr: # {
			if i >= l:
				strings.append(string[last_word:])
				breakready = True
				break
			if c == ' ' or c == '\n' or c == '\t' or c == '\r':
				strings.append(string[last_word:i])
				last_word = i
				break
			i += 1
		# }

		if breakready:
			break

		substr = string[last_word:]
		# Whitespace loop
		for c in substr: # {
			if i >= l:
				breakready = True
				break
			if not c == ' ' and not c == '\n' and not c == '\t' and not c == '\r':
				last_word = i
				break
			i += 1
		# }

		if breakready:
			break
	# }

	return tuple(strings)
# }

def main() -> int: # {
	basepath = os.path.dirname(sys.argv[0])

	args = list(sys.argv[1:])

	makefile_argsi = find_in_list('--makefile-args', args)
	if makefile_argsi >= 0:
		makefile_args = break_string(args[makefile_argsi+1])
		args = [*(args[:makefile_argsi]), *(args[makefile_argsi+2:])]
	else:
		makefile_args = tuple()
	proc = subprocess.Popen(['cmake', '.', *args], cwd=basepath)
	proc.wait()
	if proc.returncode != 0:
		print('build: An unexpected error occurred while generating makefiles using CMake,\n please check your CMake installation and/or your input arguments and try again.', file=sys.stderr)
		return proc.returncode

	proc = subprocess.Popen(['make', *makefile_args], cwd=basepath)
	proc.wait()
	if proc.returncode != 0:
		print('build: An unexpected error occured while executing a Makefile, please check\nyour Makefile arguments and try again.', file=sys.stderr)
		return proc.returncode
	else:
		return 0
# }

if __name__ == '__main__':
	sys.exit(main())
